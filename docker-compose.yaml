version: "3.8"
services:

  api:
    build:
      context: .
      dockerfile: ./server/dockerfile/Api.Dockerfile
    container_name: api
    command: |
      bash -c "./wait-for-it.sh ${SQL_HOST}:${SQL_PORT} -t 30
              ./music-wrapper"
    links:
      - mysql
    networks:
      - database
      - api
    volumes:
      - ./server/uploads:/uploads
    restart: always
    expose:
      - 5050
      - 8080

  migration:
    build:
      context: .
      dockerfile: ./server/dockerfile/Migration.Dockerfile
    container_name: migration
    entrypoint: |
      bash -c "./wait-for-it.sh ${SQL_HOST}:${SQL_PORT} -t 30
              migrate -database \"mysql://${SQL_USER}:${SQL_PASS}@tcp(${SQL_HOST}:${SQL_PORT})/${SQL_DATABASE}?charset=utf8mb4&parseTime=True&loc=Local\" -path ./migrations up"
    networks:
      - database
    links:
      - mysql

  mysql:
    image: mysql
    restart: always
    expose:
      - "3306"
    ports:
      - "3306:3306"
    networks:
      - database
    environment:
      MYSQL_ROOT_PASSWORD: ${SQL_PASS}
      MYSQL_DATABASE: ${SQL_DATABASE}

  # nginx:
  #   image: httpd
  #   volumes:
  #     - ./server/nginx.conf:/etc/nginx/nginx.conf
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   depends_on:
  #     - api
  #   ports:
  #     - "80:80"
  #   networks:
  #     - api


networks:
  database:
  api: