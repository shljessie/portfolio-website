version: "3.8"
services:

  api:
    build:
      context: .
      dockerfile: ./server/dockerfile/Api.Dockerfile
    container_name: api
    command: |
      bash -c "./wait-for-it.sh ${SQL_HOST}:${SQL_PORT} -t 30
              ./music-swapper"
    links:
      - mysql
    networks:
      - database
      - api
    volumes:
      - ./server/uploads:/uploads
    restart: always
    expose:
      - 5050
      - 8080
    labels:
      - "traefik.http.routers.api.service=api"
      - "traefik.http.routers.file.service=file"

      - "traefik.http.routers.api.rule=Host(`localhost`)"
      - "traefik.http.routers.file.rule=Host(`file.localhost`)"

      - "traefik.http.services.api.loadbalancer.server.port=5050"
      - "traefik.http.services.api.loadbalancer.healthcheck.hostname=localhost"

      - "traefik.http.services.file.loadbalancer.server.port=8080"
      - "traefik.http.services.file.loadbalancer.healthcheck.hostname=file.localhost"

  migration:
    build:
      context: .
      dockerfile: ./server/dockerfile/Migration.Dockerfile
    container_name: migration
    entrypoint: |
      bash -c "./wait-for-it.sh ${SQL_HOST}:${SQL_PORT} -t 30
              migrate -database \"mysql://${SQL_USER}:${SQL_PASS}@tcp(${SQL_HOST}:${SQL_PORT})/${SQL_DATABASE}?charset=utf8mb4&parseTime=True&loc=Local\" -path ./migrations up"
    networks:
      - database
    links:
      - mysql
    labels:
      - "traefik.enable=false"

  mysql:
    image: mysql
    restart: always
    expose:
      - "3306"
    ports:
      - "3306:3306"
    networks:
      - database
    environment:
      MYSQL_ROOT_PASSWORD: ${SQL_PASS}
      MYSQL_DATABASE: ${SQL_DATABASE}
    labels:
      - "traefik.enable=false"

  reverse-proxy:
    image: traefik:v2.3
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./server/traefik.yaml:/etc/traefik/traefik.yaml:ro
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - api

networks:
  database:
  api: